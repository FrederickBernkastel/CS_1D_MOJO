/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module translate_winner_7 (
    input [15:0] grid_led,
    output reg p1_wins,
    output reg p2_wins
  );
  
  
  
  wire [8-1:0] M_aluA_out;
  reg [8-1:0] M_aluA_a;
  reg [8-1:0] M_aluA_b;
  reg [8-1:0] M_aluA_alufn;
  alu_13 aluA (
    .a(M_aluA_a),
    .b(M_aluA_b),
    .alufn(M_aluA_alufn),
    .out(M_aluA_out)
  );
  
  wire [8-1:0] M_aluB_out;
  reg [8-1:0] M_aluB_a;
  reg [8-1:0] M_aluB_b;
  reg [8-1:0] M_aluB_alufn;
  alu_13 aluB (
    .a(M_aluB_a),
    .b(M_aluB_b),
    .alufn(M_aluB_alufn),
    .out(M_aluB_out)
  );
  
  always @* begin
    M_aluA_a = 8'h00 + grid_led[0+0-:1] + grid_led[1+0-:1] + grid_led[2+0-:1] + grid_led[3+0-:1] + grid_led[4+0-:1] + grid_led[5+0-:1] + grid_led[6+0-:1] + grid_led[7+0-:1] + grid_led[8+0-:1] + grid_led[9+0-:1] + grid_led[10+0-:1] + grid_led[11+0-:1] + grid_led[12+0-:1] + grid_led[13+0-:1] + grid_led[14+0-:1] + grid_led[15+0-:1];
    M_aluA_b = 8'h00 + !grid_led[0+0-:1] + !grid_led[1+0-:1] + !grid_led[2+0-:1] + !grid_led[3+0-:1] + !grid_led[4+0-:1] + !grid_led[5+0-:1] + !grid_led[6+0-:1] + !grid_led[7+0-:1] + !grid_led[8+0-:1] + !grid_led[9+0-:1] + !grid_led[10+0-:1] + !grid_led[11+0-:1] + !grid_led[12+0-:1] + !grid_led[13+0-:1] + !grid_led[14+0-:1] + !grid_led[15+0-:1];
    M_aluA_alufn = 6'h37;
    M_aluB_a = 8'h00 + !grid_led[0+0-:1] + !grid_led[1+0-:1] + !grid_led[2+0-:1] + !grid_led[3+0-:1] + !grid_led[4+0-:1] + !grid_led[5+0-:1] + !grid_led[6+0-:1] + !grid_led[7+0-:1] + !grid_led[8+0-:1] + !grid_led[9+0-:1] + !grid_led[10+0-:1] + !grid_led[11+0-:1] + !grid_led[12+0-:1] + !grid_led[13+0-:1] + !grid_led[14+0-:1] + !grid_led[15+0-:1];
    M_aluB_b = 8'h00 + grid_led[0+0-:1] + grid_led[1+0-:1] + grid_led[2+0-:1] + grid_led[3+0-:1] + grid_led[4+0-:1] + grid_led[5+0-:1] + grid_led[6+0-:1] + grid_led[7+0-:1] + grid_led[8+0-:1] + grid_led[9+0-:1] + grid_led[10+0-:1] + grid_led[11+0-:1] + grid_led[12+0-:1] + grid_led[13+0-:1] + grid_led[14+0-:1] + grid_led[15+0-:1];
    M_aluB_alufn = 6'h37;
    if (M_aluB_out[0+0-:1] == 8'h01) begin
      p1_wins = 1'h1;
    end else begin
      p1_wins = 1'h0;
    end
    if (M_aluA_out[0+0-:1] == 8'h01) begin
      p2_wins = 1'h1;
    end else begin
      p2_wins = 1'h0;
    end
  end
endmodule
